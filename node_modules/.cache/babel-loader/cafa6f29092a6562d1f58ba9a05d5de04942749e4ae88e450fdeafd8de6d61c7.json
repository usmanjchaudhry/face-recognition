{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isTracerEnabled = exports.trace = exports.log = exports.setLoggerVerbosity = exports.setLogger = exports.getLogger = void 0;\nconst constants_1 = require(\"./constants\");\nconst DEFAULT_LOGGER = {\n  error: function (message) {\n    for (var _len = arguments.length, optionalParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      optionalParams[_key - 1] = arguments[_key];\n    }\n    console.error('E ' + message, ...optionalParams);\n  },\n  info: function (message) {\n    for (var _len2 = arguments.length, optionalParams = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      optionalParams[_key2 - 1] = arguments[_key2];\n    }\n    console.error('I ' + message, ...optionalParams);\n  },\n  debug: function (message) {\n    for (var _len3 = arguments.length, optionalParams = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      optionalParams[_key3 - 1] = arguments[_key3];\n    }\n    console.error('D ' + message, ...optionalParams);\n  }\n};\nlet _logger = DEFAULT_LOGGER;\nlet _logVerbosity = constants_1.LogVerbosity.ERROR;\nconst verbosityString = (_b = (_a = process.env.GRPC_NODE_VERBOSITY) !== null && _a !== void 0 ? _a : process.env.GRPC_VERBOSITY) !== null && _b !== void 0 ? _b : '';\nswitch (verbosityString.toUpperCase()) {\n  case 'DEBUG':\n    _logVerbosity = constants_1.LogVerbosity.DEBUG;\n    break;\n  case 'INFO':\n    _logVerbosity = constants_1.LogVerbosity.INFO;\n    break;\n  case 'ERROR':\n    _logVerbosity = constants_1.LogVerbosity.ERROR;\n    break;\n  case 'NONE':\n    _logVerbosity = constants_1.LogVerbosity.NONE;\n    break;\n  default:\n  // Ignore any other values\n}\n\nconst getLogger = () => {\n  return _logger;\n};\nexports.getLogger = getLogger;\nconst setLogger = logger => {\n  _logger = logger;\n};\nexports.setLogger = setLogger;\nconst setLoggerVerbosity = verbosity => {\n  _logVerbosity = verbosity;\n};\nexports.setLoggerVerbosity = setLoggerVerbosity;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst log = function (severity) {\n  let logFunction;\n  if (severity >= _logVerbosity) {\n    switch (severity) {\n      case constants_1.LogVerbosity.DEBUG:\n        logFunction = _logger.debug;\n        break;\n      case constants_1.LogVerbosity.INFO:\n        logFunction = _logger.info;\n        break;\n      case constants_1.LogVerbosity.ERROR:\n        logFunction = _logger.error;\n        break;\n    }\n    /* Fall back to _logger.error when other methods are not available for\n     * compatiblity with older behavior that always logged to _logger.error */\n    if (!logFunction) {\n      logFunction = _logger.error;\n    }\n    if (logFunction) {\n      for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n      logFunction.bind(_logger)(...args);\n    }\n  }\n};\nexports.log = log;\nconst tracersString = (_d = (_c = process.env.GRPC_NODE_TRACE) !== null && _c !== void 0 ? _c : process.env.GRPC_TRACE) !== null && _d !== void 0 ? _d : '';\nconst enabledTracers = new Set();\nconst disabledTracers = new Set();\nfor (const tracerName of tracersString.split(',')) {\n  if (tracerName.startsWith('-')) {\n    disabledTracers.add(tracerName.substring(1));\n  } else {\n    enabledTracers.add(tracerName);\n  }\n}\nconst allEnabled = enabledTracers.has('all');\nfunction trace(severity, tracer, text) {\n  if (isTracerEnabled(tracer)) {\n    (0, exports.log)(severity, new Date().toISOString() + ' | ' + tracer + ' | ' + text);\n  }\n}\nexports.trace = trace;\nfunction isTracerEnabled(tracer) {\n  return !disabledTracers.has(tracer) && (allEnabled || enabledTracers.has(tracer));\n}\nexports.isTracerEnabled = isTracerEnabled;","map":{"version":3,"names":["constants_1","require","DEFAULT_LOGGER","error","message","_len","arguments","length","optionalParams","Array","_key","console","info","_len2","_key2","debug","_len3","_key3","_logger","_logVerbosity","LogVerbosity","ERROR","verbosityString","_b","_a","process","env","GRPC_NODE_VERBOSITY","GRPC_VERBOSITY","toUpperCase","DEBUG","INFO","NONE","getLogger","exports","setLogger","logger","setLoggerVerbosity","verbosity","log","severity","logFunction","_len4","args","_key4","bind","tracersString","_d","_c","GRPC_NODE_TRACE","GRPC_TRACE","enabledTracers","Set","disabledTracers","tracerName","split","startsWith","add","substring","allEnabled","has","trace","tracer","text","isTracerEnabled","Date","toISOString"],"sources":["/Users/usmanchaudhry/Documents/GitHub/weather-app/face-recognition/node_modules/@grpc/grpc-js/src/logging.ts"],"sourcesContent":["/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { LogVerbosity } from './constants';\n\nconst DEFAULT_LOGGER: Partial<Console> = {\n  error: (message?: any, ...optionalParams: any[]) => {\n    console.error('E ' + message, ...optionalParams);\n  },\n  info: (message?: any, ...optionalParams: any[]) => {\n    console.error('I ' + message, ...optionalParams);\n  },\n  debug: (message?: any, ...optionalParams: any[]) => {\n    console.error('D ' + message, ...optionalParams);\n  },\n}\n\nlet _logger: Partial<Console> = DEFAULT_LOGGER;\nlet _logVerbosity: LogVerbosity = LogVerbosity.ERROR;\n\nconst verbosityString =\n  process.env.GRPC_NODE_VERBOSITY ?? process.env.GRPC_VERBOSITY ?? '';\n\nswitch (verbosityString.toUpperCase()) {\n  case 'DEBUG':\n    _logVerbosity = LogVerbosity.DEBUG;\n    break;\n  case 'INFO':\n    _logVerbosity = LogVerbosity.INFO;\n    break;\n  case 'ERROR':\n    _logVerbosity = LogVerbosity.ERROR;\n    break;\n  case 'NONE':\n    _logVerbosity = LogVerbosity.NONE;\n    break;\n  default:\n  // Ignore any other values\n}\n\nexport const getLogger = (): Partial<Console> => {\n  return _logger;\n};\n\nexport const setLogger = (logger: Partial<Console>): void => {\n  _logger = logger;\n};\n\nexport const setLoggerVerbosity = (verbosity: LogVerbosity): void => {\n  _logVerbosity = verbosity;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const log = (severity: LogVerbosity, ...args: any[]): void => {\n  let logFunction: typeof DEFAULT_LOGGER.error;\n  if (severity >= _logVerbosity) {\n    switch (severity) {\n      case LogVerbosity.DEBUG:\n        logFunction = _logger.debug;\n        break;\n      case LogVerbosity.INFO:\n        logFunction = _logger.info;\n        break;\n      case LogVerbosity.ERROR:\n        logFunction = _logger.error;\n        break;\n    }\n    /* Fall back to _logger.error when other methods are not available for\n     * compatiblity with older behavior that always logged to _logger.error */\n    if (!logFunction) {\n      logFunction = _logger.error;\n    }\n    if (logFunction) {\n      logFunction.bind(_logger)(...args);\n    }\n  }\n};\n\nconst tracersString =\n  process.env.GRPC_NODE_TRACE ?? process.env.GRPC_TRACE ?? '';\nconst enabledTracers = new Set<string>();\nconst disabledTracers = new Set<string>();\nfor (const tracerName of tracersString.split(',')) {\n  if (tracerName.startsWith('-')) {\n    disabledTracers.add(tracerName.substring(1));\n  } else {\n    enabledTracers.add(tracerName);\n  }\n}\nconst allEnabled = enabledTracers.has('all');\n\nexport function trace(\n  severity: LogVerbosity,\n  tracer: string,\n  text: string\n): void {\n  if (isTracerEnabled(tracer)) {\n    log(severity, new Date().toISOString() + ' | ' + tracer + ' | ' + text);\n  }\n}\n\nexport function isTracerEnabled(tracer: string): boolean {\n  return !disabledTracers.has(tracer) &&\n    (allEnabled || enabledTracers.has(tracer));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}