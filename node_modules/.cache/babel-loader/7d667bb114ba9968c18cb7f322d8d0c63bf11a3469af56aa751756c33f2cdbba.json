{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChildLoadBalancerHandler = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst TYPE_NAME = 'child_load_balancer_helper';\nclass ChildLoadBalancerHandler {\n  constructor(channelControlHelper) {\n    this.channelControlHelper = channelControlHelper;\n    this.currentChild = null;\n    this.pendingChild = null;\n    this.ChildPolicyHelper = class {\n      constructor(parent) {\n        this.parent = parent;\n        this.child = null;\n      }\n      createSubchannel(subchannelAddress, subchannelArgs) {\n        return this.parent.channelControlHelper.createSubchannel(subchannelAddress, subchannelArgs);\n      }\n      updateState(connectivityState, picker) {\n        var _a;\n        if (this.calledByPendingChild()) {\n          if (connectivityState === connectivity_state_1.ConnectivityState.CONNECTING) {\n            return;\n          }\n          (_a = this.parent.currentChild) === null || _a === void 0 ? void 0 : _a.destroy();\n          this.parent.currentChild = this.parent.pendingChild;\n          this.parent.pendingChild = null;\n        } else if (!this.calledByCurrentChild()) {\n          return;\n        }\n        this.parent.channelControlHelper.updateState(connectivityState, picker);\n      }\n      requestReresolution() {\n        var _a;\n        const latestChild = (_a = this.parent.pendingChild) !== null && _a !== void 0 ? _a : this.parent.currentChild;\n        if (this.child === latestChild) {\n          this.parent.channelControlHelper.requestReresolution();\n        }\n      }\n      setChild(newChild) {\n        this.child = newChild;\n      }\n      addChannelzChild(child) {\n        this.parent.channelControlHelper.addChannelzChild(child);\n      }\n      removeChannelzChild(child) {\n        this.parent.channelControlHelper.removeChannelzChild(child);\n      }\n      calledByPendingChild() {\n        return this.child === this.parent.pendingChild;\n      }\n      calledByCurrentChild() {\n        return this.child === this.parent.currentChild;\n      }\n    };\n  }\n  /**\n   * Prerequisites: lbConfig !== null and lbConfig.name is registered\n   * @param addressList\n   * @param lbConfig\n   * @param attributes\n   */\n  updateAddressList(addressList, lbConfig, attributes) {\n    let childToUpdate;\n    if (this.currentChild === null || this.currentChild.getTypeName() !== lbConfig.getLoadBalancerName()) {\n      const newHelper = new this.ChildPolicyHelper(this);\n      const newChild = (0, load_balancer_1.createLoadBalancer)(lbConfig, newHelper);\n      newHelper.setChild(newChild);\n      if (this.currentChild === null) {\n        this.currentChild = newChild;\n        childToUpdate = this.currentChild;\n      } else {\n        if (this.pendingChild) {\n          this.pendingChild.destroy();\n        }\n        this.pendingChild = newChild;\n        childToUpdate = this.pendingChild;\n      }\n    } else {\n      if (this.pendingChild === null) {\n        childToUpdate = this.currentChild;\n      } else {\n        childToUpdate = this.pendingChild;\n      }\n    }\n    childToUpdate.updateAddressList(addressList, lbConfig, attributes);\n  }\n  exitIdle() {\n    if (this.currentChild) {\n      this.currentChild.exitIdle();\n      if (this.pendingChild) {\n        this.pendingChild.exitIdle();\n      }\n    }\n  }\n  resetBackoff() {\n    if (this.currentChild) {\n      this.currentChild.resetBackoff();\n      if (this.pendingChild) {\n        this.pendingChild.resetBackoff();\n      }\n    }\n  }\n  destroy() {\n    if (this.currentChild) {\n      this.currentChild.destroy();\n      this.currentChild = null;\n    }\n    if (this.pendingChild) {\n      this.pendingChild.destroy();\n      this.pendingChild = null;\n    }\n  }\n  getTypeName() {\n    return TYPE_NAME;\n  }\n}\nexports.ChildLoadBalancerHandler = ChildLoadBalancerHandler;","map":{"version":3,"names":["load_balancer_1","require","connectivity_state_1","TYPE_NAME","ChildLoadBalancerHandler","constructor","channelControlHelper","currentChild","pendingChild","ChildPolicyHelper","parent","child","createSubchannel","subchannelAddress","subchannelArgs","updateState","connectivityState","picker","calledByPendingChild","ConnectivityState","CONNECTING","_a","destroy","calledByCurrentChild","requestReresolution","latestChild","setChild","newChild","addChannelzChild","removeChannelzChild","updateAddressList","addressList","lbConfig","attributes","childToUpdate","getTypeName","getLoadBalancerName","newHelper","createLoadBalancer","exitIdle","resetBackoff","exports"],"sources":["/Users/usmanchaudhry/Documents/GitHub/weather-app/face-recognition/node_modules/@grpc/grpc-js/src/load-balancer-child-handler.ts"],"sourcesContent":["/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  LoadBalancer,\n  ChannelControlHelper,\n  LoadBalancingConfig,\n  createLoadBalancer,\n} from './load-balancer';\nimport { SubchannelAddress } from './subchannel-address';\nimport { ChannelOptions } from './channel-options';\nimport { ConnectivityState } from './connectivity-state';\nimport { Picker } from './picker';\nimport { ChannelRef, SubchannelRef } from './channelz';\nimport { SubchannelInterface } from './subchannel-interface';\n\nconst TYPE_NAME = 'child_load_balancer_helper';\n\nexport class ChildLoadBalancerHandler implements LoadBalancer {\n  private currentChild: LoadBalancer | null = null;\n  private pendingChild: LoadBalancer | null = null;\n\n  private ChildPolicyHelper = class {\n    private child: LoadBalancer | null = null;\n    constructor(private parent: ChildLoadBalancerHandler) {}\n    createSubchannel(\n      subchannelAddress: SubchannelAddress,\n      subchannelArgs: ChannelOptions\n    ): SubchannelInterface {\n      return this.parent.channelControlHelper.createSubchannel(\n        subchannelAddress,\n        subchannelArgs\n      );\n    }\n    updateState(connectivityState: ConnectivityState, picker: Picker): void {\n      if (this.calledByPendingChild()) {\n        if (connectivityState === ConnectivityState.CONNECTING) {\n          return;\n        }\n        this.parent.currentChild?.destroy();\n        this.parent.currentChild = this.parent.pendingChild;\n        this.parent.pendingChild = null;\n      } else if (!this.calledByCurrentChild()) {\n        return;\n      }\n      this.parent.channelControlHelper.updateState(connectivityState, picker);\n    }\n    requestReresolution(): void {\n      const latestChild = this.parent.pendingChild ?? this.parent.currentChild;\n      if (this.child === latestChild) {\n        this.parent.channelControlHelper.requestReresolution();\n      }\n    }\n    setChild(newChild: LoadBalancer) {\n      this.child = newChild;\n    }\n    addChannelzChild(child: ChannelRef | SubchannelRef) {\n      this.parent.channelControlHelper.addChannelzChild(child);\n    }\n    removeChannelzChild(child: ChannelRef | SubchannelRef) {\n      this.parent.channelControlHelper.removeChannelzChild(child);\n    }\n    \n    private calledByPendingChild(): boolean {\n      return this.child === this.parent.pendingChild;\n    }\n    private calledByCurrentChild(): boolean {\n      return this.child === this.parent.currentChild;\n    }\n  };\n\n  constructor(private readonly channelControlHelper: ChannelControlHelper) {}\n\n  /**\n   * Prerequisites: lbConfig !== null and lbConfig.name is registered\n   * @param addressList\n   * @param lbConfig\n   * @param attributes\n   */\n  updateAddressList(\n    addressList: SubchannelAddress[],\n    lbConfig: LoadBalancingConfig,\n    attributes: { [key: string]: unknown }\n  ): void {\n    let childToUpdate: LoadBalancer;\n    if (\n      this.currentChild === null ||\n      this.currentChild.getTypeName() !== lbConfig.getLoadBalancerName()\n    ) {\n      const newHelper = new this.ChildPolicyHelper(this);\n      const newChild = createLoadBalancer(lbConfig, newHelper)!;\n      newHelper.setChild(newChild);\n      if (this.currentChild === null) {\n        this.currentChild = newChild;\n        childToUpdate = this.currentChild;\n      } else {\n        if (this.pendingChild) {\n          this.pendingChild.destroy();\n        }\n        this.pendingChild = newChild;\n        childToUpdate = this.pendingChild;\n      }\n    } else {\n      if (this.pendingChild === null) {\n        childToUpdate = this.currentChild;\n      } else {\n        childToUpdate = this.pendingChild;\n      }\n    }\n    childToUpdate.updateAddressList(addressList, lbConfig, attributes);\n  }\n  exitIdle(): void {\n    if (this.currentChild) {\n      this.currentChild.exitIdle();\n      if (this.pendingChild) {\n        this.pendingChild.exitIdle();\n      }\n    }\n  }\n  resetBackoff(): void {\n    if (this.currentChild) {\n      this.currentChild.resetBackoff();\n      if (this.pendingChild) {\n        this.pendingChild.resetBackoff();\n      }\n    }\n  }\n  destroy(): void {\n    if (this.currentChild) {\n      this.currentChild.destroy();\n      this.currentChild = null;\n    }\n    if (this.pendingChild) {\n      this.pendingChild.destroy();\n      this.pendingChild = null;\n    }\n  }\n  getTypeName(): string {\n    return TYPE_NAME;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}