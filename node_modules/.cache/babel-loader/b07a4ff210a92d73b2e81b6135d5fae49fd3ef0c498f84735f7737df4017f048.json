{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setup = void 0;\nconst resolver_1 = require(\"./resolver\");\nclass UdsResolver {\n  constructor(target, listener, channelOptions) {\n    this.listener = listener;\n    this.addresses = [];\n    let path;\n    if (target.authority === '') {\n      path = '/' + target.path;\n    } else {\n      path = target.path;\n    }\n    this.addresses = [{\n      path\n    }];\n  }\n  updateResolution() {\n    process.nextTick(this.listener.onSuccessfulResolution, this.addresses, null, null, null, {});\n  }\n  destroy() {\n    // This resolver owns no resources, so we do nothing here.\n  }\n  static getDefaultAuthority(target) {\n    return 'localhost';\n  }\n}\nfunction setup() {\n  (0, resolver_1.registerResolver)('unix', UdsResolver);\n}\nexports.setup = setup;","map":{"version":3,"names":["resolver_1","require","UdsResolver","constructor","target","listener","channelOptions","addresses","path","authority","updateResolution","process","nextTick","onSuccessfulResolution","destroy","getDefaultAuthority","setup","registerResolver","exports"],"sources":["/Users/usmanchaudhry/Documents/GitHub/weather-app/face-recognition/node_modules/@grpc/grpc-js/src/resolver-uds.ts"],"sourcesContent":["/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Resolver, ResolverListener, registerResolver } from './resolver';\nimport { SubchannelAddress } from './subchannel-address';\nimport { GrpcUri } from './uri-parser';\nimport { ChannelOptions } from './channel-options';\n\nclass UdsResolver implements Resolver {\n  private addresses: SubchannelAddress[] = [];\n  constructor(\n    target: GrpcUri,\n    private listener: ResolverListener,\n    channelOptions: ChannelOptions\n  ) {\n    let path: string;\n    if (target.authority === '') {\n      path = '/' + target.path;\n    } else {\n      path = target.path;\n    }\n    this.addresses = [{ path }];\n  }\n  updateResolution(): void {\n    process.nextTick(\n      this.listener.onSuccessfulResolution,\n      this.addresses,\n      null,\n      null,\n      null,\n      {}\n    );\n  }\n\n  destroy() {\n    // This resolver owns no resources, so we do nothing here.\n  }\n\n  static getDefaultAuthority(target: GrpcUri): string {\n    return 'localhost';\n  }\n}\n\nexport function setup() {\n  registerResolver('unix', UdsResolver);\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAgBA,MAAAA,UAAA,GAAAC,OAAA;AAKA,MAAMC,WAAW;EAEfC,YACEC,MAAe,EACPC,QAA0B,EAClCC,cAA8B;IADtB,KAAAD,QAAQ,GAARA,QAAQ;IAHV,KAAAE,SAAS,GAAwB,EAAE;IAMzC,IAAIC,IAAY;IAChB,IAAIJ,MAAM,CAACK,SAAS,KAAK,EAAE,EAAE;MAC3BD,IAAI,GAAG,GAAG,GAAGJ,MAAM,CAACI,IAAI;KACzB,MAAM;MACLA,IAAI,GAAGJ,MAAM,CAACI,IAAI;;IAEpB,IAAI,CAACD,SAAS,GAAG,CAAC;MAAEC;IAAI,CAAE,CAAC;EAC7B;EACAE,gBAAgBA,CAAA;IACdC,OAAO,CAACC,QAAQ,CACd,IAAI,CAACP,QAAQ,CAACQ,sBAAsB,EACpC,IAAI,CAACN,SAAS,EACd,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,EAAE,CACH;EACH;EAEAO,OAAOA,CAAA;IACL;EAAA;EAGF,OAAOC,mBAAmBA,CAACX,MAAe;IACxC,OAAO,WAAW;EACpB;;AAGF,SAAgBY,KAAKA,CAAA;EACnB,IAAAhB,UAAA,CAAAiB,gBAAgB,EAAC,MAAM,EAAEf,WAAW,CAAC;AACvC;AAFAgB,OAAA,CAAAF,KAAA,GAAAA,KAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}