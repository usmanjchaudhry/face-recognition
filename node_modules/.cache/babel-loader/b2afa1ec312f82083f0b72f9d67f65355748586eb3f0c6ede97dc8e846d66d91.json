{"ast":null,"code":"var _jsxFileName = \"/Users/usmanchaudhry/Documents/GitHub/weather-app/face-recognition/src/App.js\",\n  _s = $RefreshSig$();\nimport { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const onInputChange = event => {\n    console.log(event.target.value);\n  };\n  const onButtonSubmit = () => {\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"clarifai\",\n        \"app_id\": \"main\"\n      },\n      \"inputs\": [{\n        \"data\": {\n          \"image\": {\n            \"url\": \"https://ca-times.brightspotcdn.com/dims4/default/8e57d04/2147483647/strip/true/crop/3000x2400+0+0/resize/1200x960!/format/webp/quality/80/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F93%2F8b%2F6c891352462f9f4c452a97c554eb%2Fla-ca-joe-rogan-121.JPG\"\n          }\n        }\n      }]\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key  19b06bbe708d4333b9be4d16c09759ef'\n      },\n      body: raw\n    };\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n      onInputChange: onInputChange,\n      onButtonSubmit: onButtonSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticlesBg, {\n      type: \"circle\",\n      bg: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Component","Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","FaceRecognition","useState","jsxDEV","_jsxDEV","App","_s","input","setInput","onInputChange","event","console","log","target","value","onButtonSubmit","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","bg","_c","$RefreshReg$"],"sources":["/Users/usmanchaudhry/Documents/GitHub/weather-app/face-recognition/src/App.js"],"sourcesContent":["import { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport ParticlesBg from 'particles-bg'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport { useState } from 'react';\n\n\n\n\nfunction App() {\n\n \n   \n  const [input, setInput] = useState('');\n\n  const onInputChange = (event) => {\n    console.log(event.target.value );\n  }\n\n  const onButtonSubmit = () =>{\n\n\n    \nconst raw = JSON.stringify({\n  \"user_app_id\": {\n    \"user_id\": \"clarifai\",\n    \"app_id\": \"main\"\n  },\n  \"inputs\": [\n      {\n          \"data\": {\n              \"image\": {\n                  \"url\": \"https://ca-times.brightspotcdn.com/dims4/default/8e57d04/2147483647/strip/true/crop/3000x2400+0+0/resize/1200x960!/format/webp/quality/80/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F93%2F8b%2F6c891352462f9f4c452a97c554eb%2Fla-ca-joe-rogan-121.JPG\"\n              }\n          }\n      }\n  ]\n});\n\nconst requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key  19b06bbe708d4333b9be4d16c09759ef'\n    },\n    body: raw\n};\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\nfetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n  \n  }\n\n  return (\n    <div className='App'>\n      <Navigation/>\n      <Logo/> \n      <Rank/>\n\n      <ImageLinkForm onInputChange = {onInputChange} onButtonSubmit = {onButtonSubmit}/>\n      <FaceRecognition/> \n      <ParticlesBg type=\"circle\" bg={true} />\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,eAAe,MAAM,8CAA8C;AAC1E,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAIb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMO,aAAa,GAAIC,KAAK,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAE;EAClC,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAK;IAI9B,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;MACzB,aAAa,EAAE;QACb,SAAS,EAAE,UAAU;QACrB,QAAQ,EAAE;MACZ,CAAC;MACD,QAAQ,EAAE,CACN;QACI,MAAM,EAAE;UACJ,OAAO,EAAE;YACL,KAAK,EAAE;UACX;QACJ;MACJ,CAAC;IAEP,CAAC,CAAC;IAEF,MAAMC,cAAc,GAAG;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,eAAe,EAAE;MACrB,CAAC;MACDC,IAAI,EAAEN;IACV,CAAC;;IAED;IACA;IACA;;IAEAO,KAAK,CAAE,qGAAoG,EAAEJ,cAAc,CAAC,CACvHK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIhB,OAAO,CAACC,GAAG,CAACe,MAAM,CAAC,CAAC,CACnCC,KAAK,CAACC,KAAK,IAAIlB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEiB,KAAK,CAAC,CAAC;EAE9C,CAAC;EAED,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3B,OAAA,CAACR,UAAU;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACb/B,OAAA,CAACP,IAAI;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACP/B,OAAA,CAACL,IAAI;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAEP/B,OAAA,CAACN,aAAa;MAACW,aAAa,EAAIA,aAAc;MAACM,cAAc,EAAIA;IAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAClF/B,OAAA,CAACH,eAAe;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAClB/B,OAAA,CAACJ,WAAW;MAACoC,IAAI,EAAC,QAAQ;MAACC,EAAE,EAAE;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEnC;AAEV;AAAC7B,EAAA,CA9DQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}