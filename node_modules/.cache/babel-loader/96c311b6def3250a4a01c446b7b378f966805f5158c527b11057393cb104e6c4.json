{"ast":null,"code":"var _jsxFileName = \"/Users/usmanchaudhry/Documents/GitHub/weather-app/face-recognition/src/App.js\",\n  _s = $RefreshSig$();\nimport { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [imageURL, setImageURL] = useState('');\n  const [data, setData] = useState({});\n  const [box, setBox] = useState({});\n  const calculateFaceLocation = data => {\n    const clarifaiFace = data;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  };\n  const onInputChange = event => {\n    console.log(event.target.value);\n    setInput(event.target.value);\n    console.log(input);\n  };\n  useEffect(() => {\n    console.log(input);\n  }, []);\n  const onButtonSubmit = () => {\n    setImageURL(input);\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"clarifai\",\n        \"app_id\": \"main\"\n      },\n      \"inputs\": [{\n        \"data\": {\n          \"image\": {\n            \"url\": input\n          }\n        }\n      }]\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key 19b06bbe708d4333b9be4d16c09759ef'\n      },\n      body: raw\n    };\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions).then(response => response.json()).then(result => {\n      const boundingBox = result.outputs[0].data.regions[0].region_info.bounding_box;\n      setData(boundingBox);\n    }).catch(error => console.log('error', error));\n  };\n  useEffect(() => {\n    console.log(data);\n    calculateFaceLocation(data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n      onInputChange: onInputChange,\n      onButtonSubmit: onButtonSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n      imageURL: imageURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticlesBg, {\n      type: \"circle\",\n      bg: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KIWR6YabKS/3riJ8VHA6cVNDs8I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Component","Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","FaceRecognition","useState","useEffect","jsxDEV","_jsxDEV","App","_s","input","setInput","imageURL","setImageURL","data","setData","box","setBox","calculateFaceLocation","clarifaiFace","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","onInputChange","event","target","value","onButtonSubmit","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","json","result","boundingBox","outputs","regions","region_info","bounding_box","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","bg","_c","$RefreshReg$"],"sources":["/Users/usmanchaudhry/Documents/GitHub/weather-app/face-recognition/src/App.js"],"sourcesContent":["import { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport ParticlesBg from 'particles-bg'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport { useState, useEffect } from 'react';\n\n\n\n\nfunction App() {\n\n \n   \n  const [input, setInput] = useState('');\n  const [imageURL, setImageURL] = useState('');\n  const [data, setData] = useState({});\n  const [box,setBox] = useState({})\n\n\n\n\n\n  const calculateFaceLocation = (data) =>{\n\n    const clarifaiFace = data\n    const image = document.getElementById('inputImage')\n    const width = Number(image.width)\n    const height = Number(image.height)\n    console.log(width,height)\n    return{\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n\n    }\n  }\n  const onInputChange = (event) => {\n    console.log(event.target.value);\n    setInput(event.target.value);\n    console.log(input)\n  }\n\n  useEffect(() => {\n    console.log(input);\n  }, []);\n\n  const onButtonSubmit = () =>{\n\n    setImageURL(input);\n    \nconst raw = JSON.stringify({\n  \"user_app_id\": {\n    \"user_id\": \"clarifai\",\n    \"app_id\": \"main\"\n  },\n  \"inputs\": [\n      {\n          \"data\": {\n              \"image\": {\n                  \"url\": input\n              }\n          }\n      }\n  ]\n});\n\nconst requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key 19b06bbe708d4333b9be4d16c09759ef'\n    },\n    body: raw\n};\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\nfetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions)\n    .then(response => response.json()) \n    .then(result => {\n      const boundingBox = result.outputs[0].data.regions[0].region_info.bounding_box;\n      setData(boundingBox);\n  })\n  .catch(error => console.log('error', error))\n}\n\nuseEffect(() => {\nconsole.log(data);\ncalculateFaceLocation(data)\n}, [data]);\n\n  return (\n    <div className='App'>\n      <Navigation/>\n      <Logo/> \n      <Rank/>\n\n      <ImageLinkForm onInputChange = {onInputChange} onButtonSubmit = {onButtonSubmit}/>\n      <FaceRecognition imageURL={imageURL}/> \n      <ParticlesBg type=\"circle\" bg={true} />\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,eAAe,MAAM,8CAA8C;AAC1E,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAIb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACY,GAAG,EAACC,MAAM,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAMjC,MAAMc,qBAAqB,GAAIJ,IAAI,IAAI;IAErC,MAAMK,YAAY,GAAGL,IAAI;IACzB,MAAMM,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IACnD,MAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAK,CAAC;IACjC,MAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAM,CAAC;IACnCC,OAAO,CAACC,GAAG,CAACJ,KAAK,EAACE,MAAM,CAAC;IACzB,OAAM;MACJG,OAAO,EAAET,YAAY,CAACU,QAAQ,GAAGN,KAAK;MACtCO,MAAM,EAAEX,YAAY,CAACY,OAAO,GAAGN,MAAM;MACrCO,QAAQ,EAAET,KAAK,GAAIJ,YAAY,CAACc,SAAS,GAAGV,KAAM;MAClDW,SAAS,EAAET,MAAM,GAAIN,YAAY,CAACgB,UAAU,GAAGV;IAEjD,CAAC;EACH,CAAC;EACD,MAAMW,aAAa,GAAIC,KAAK,IAAK;IAC/BX,OAAO,CAACC,GAAG,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC/B5B,QAAQ,CAAC0B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC5Bb,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC;EACpB,CAAC;EAEDL,SAAS,CAAC,MAAM;IACdqB,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM8B,cAAc,GAAGA,CAAA,KAAK;IAE1B3B,WAAW,CAACH,KAAK,CAAC;IAEtB,MAAM+B,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;MACzB,aAAa,EAAE;QACb,SAAS,EAAE,UAAU;QACrB,QAAQ,EAAE;MACZ,CAAC;MACD,QAAQ,EAAE,CACN;QACI,MAAM,EAAE;UACJ,OAAO,EAAE;YACL,KAAK,EAAEjC;UACX;QACJ;MACJ,CAAC;IAEP,CAAC,CAAC;IAEF,MAAMkC,cAAc,GAAG;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,eAAe,EAAE;MACrB,CAAC;MACDC,IAAI,EAAEN;IACV,CAAC;;IAED;IACA;IACA;;IAEAO,KAAK,CAAE,qGAAoG,EAAEJ,cAAc,CAAC,CACvHK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAI;MACd,MAAMC,WAAW,GAAGD,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAACxC,IAAI,CAACyC,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,CAACC,YAAY;MAC9E1C,OAAO,CAACsC,WAAW,CAAC;IACxB,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAIjC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEgC,KAAK,CAAC,CAAC;EAC9C,CAAC;EAEDtD,SAAS,CAAC,MAAM;IAChBqB,OAAO,CAACC,GAAG,CAACb,IAAI,CAAC;IACjBI,qBAAqB,CAACJ,IAAI,CAAC;EAC3B,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAER,oBACEP,OAAA;IAAKqD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtD,OAAA,CAACT,UAAU;MAAAgE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACb1D,OAAA,CAACR,IAAI;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACP1D,OAAA,CAACN,IAAI;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAEP1D,OAAA,CAACP,aAAa;MAACoC,aAAa,EAAIA,aAAc;MAACI,cAAc,EAAIA;IAAe;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAClF1D,OAAA,CAACJ,eAAe;MAACS,QAAQ,EAAEA;IAAS;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACtC1D,OAAA,CAACL,WAAW;MAACgE,IAAI,EAAC,QAAQ;MAACC,EAAE,EAAE;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEnC;AAEV;AAACxD,EAAA,CAjGQD,GAAG;AAAA4D,EAAA,GAAH5D,GAAG;AAmGZ,eAAeA,GAAG;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}