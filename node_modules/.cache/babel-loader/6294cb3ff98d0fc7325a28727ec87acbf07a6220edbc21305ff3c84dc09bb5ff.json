{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ServerCredentials = void 0;\nconst tls_helpers_1 = require(\"./tls-helpers\");\nclass ServerCredentials {\n  static createInsecure() {\n    return new InsecureServerCredentials();\n  }\n  static createSsl(rootCerts, keyCertPairs) {\n    let checkClientCertificate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (rootCerts !== null && !Buffer.isBuffer(rootCerts)) {\n      throw new TypeError('rootCerts must be null or a Buffer');\n    }\n    if (!Array.isArray(keyCertPairs)) {\n      throw new TypeError('keyCertPairs must be an array');\n    }\n    if (typeof checkClientCertificate !== 'boolean') {\n      throw new TypeError('checkClientCertificate must be a boolean');\n    }\n    const cert = [];\n    const key = [];\n    for (let i = 0; i < keyCertPairs.length; i++) {\n      const pair = keyCertPairs[i];\n      if (pair === null || typeof pair !== 'object') {\n        throw new TypeError(`keyCertPair[${i}] must be an object`);\n      }\n      if (!Buffer.isBuffer(pair.private_key)) {\n        throw new TypeError(`keyCertPair[${i}].private_key must be a Buffer`);\n      }\n      if (!Buffer.isBuffer(pair.cert_chain)) {\n        throw new TypeError(`keyCertPair[${i}].cert_chain must be a Buffer`);\n      }\n      cert.push(pair.cert_chain);\n      key.push(pair.private_key);\n    }\n    return new SecureServerCredentials({\n      ca: rootCerts || (0, tls_helpers_1.getDefaultRootsData)() || undefined,\n      cert,\n      key,\n      requestCert: checkClientCertificate,\n      ciphers: tls_helpers_1.CIPHER_SUITES\n    });\n  }\n}\nexports.ServerCredentials = ServerCredentials;\nclass InsecureServerCredentials extends ServerCredentials {\n  _isSecure() {\n    return false;\n  }\n  _getSettings() {\n    return null;\n  }\n}\nclass SecureServerCredentials extends ServerCredentials {\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n  _isSecure() {\n    return true;\n  }\n  _getSettings() {\n    return this.options;\n  }\n}","map":{"version":3,"names":["tls_helpers_1","require","ServerCredentials","createInsecure","InsecureServerCredentials","createSsl","rootCerts","keyCertPairs","checkClientCertificate","arguments","length","undefined","Buffer","isBuffer","TypeError","Array","isArray","cert","key","i","pair","private_key","cert_chain","push","SecureServerCredentials","ca","getDefaultRootsData","requestCert","ciphers","CIPHER_SUITES","exports","_isSecure","_getSettings","constructor","options"],"sources":["/Users/usmanchaudhry/Documents/GitHub/weather-app/face-recognition/node_modules/@grpc/grpc-js/src/server-credentials.ts"],"sourcesContent":["/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { SecureServerOptions } from 'http2';\nimport { CIPHER_SUITES, getDefaultRootsData } from './tls-helpers';\n\nexport interface KeyCertPair {\n  private_key: Buffer;\n  cert_chain: Buffer;\n}\n\nexport abstract class ServerCredentials {\n  abstract _isSecure(): boolean;\n  abstract _getSettings(): SecureServerOptions | null;\n\n  static createInsecure(): ServerCredentials {\n    return new InsecureServerCredentials();\n  }\n\n  static createSsl(\n    rootCerts: Buffer | null,\n    keyCertPairs: KeyCertPair[],\n    checkClientCertificate = false\n  ): ServerCredentials {\n    if (rootCerts !== null && !Buffer.isBuffer(rootCerts)) {\n      throw new TypeError('rootCerts must be null or a Buffer');\n    }\n\n    if (!Array.isArray(keyCertPairs)) {\n      throw new TypeError('keyCertPairs must be an array');\n    }\n\n    if (typeof checkClientCertificate !== 'boolean') {\n      throw new TypeError('checkClientCertificate must be a boolean');\n    }\n\n    const cert = [];\n    const key = [];\n\n    for (let i = 0; i < keyCertPairs.length; i++) {\n      const pair = keyCertPairs[i];\n\n      if (pair === null || typeof pair !== 'object') {\n        throw new TypeError(`keyCertPair[${i}] must be an object`);\n      }\n\n      if (!Buffer.isBuffer(pair.private_key)) {\n        throw new TypeError(`keyCertPair[${i}].private_key must be a Buffer`);\n      }\n\n      if (!Buffer.isBuffer(pair.cert_chain)) {\n        throw new TypeError(`keyCertPair[${i}].cert_chain must be a Buffer`);\n      }\n\n      cert.push(pair.cert_chain);\n      key.push(pair.private_key);\n    }\n\n    return new SecureServerCredentials({\n      ca: rootCerts || getDefaultRootsData() || undefined,\n      cert,\n      key,\n      requestCert: checkClientCertificate,\n      ciphers: CIPHER_SUITES,\n    });\n  }\n}\n\nclass InsecureServerCredentials extends ServerCredentials {\n  _isSecure(): boolean {\n    return false;\n  }\n\n  _getSettings(): null {\n    return null;\n  }\n}\n\nclass SecureServerCredentials extends ServerCredentials {\n  private options: SecureServerOptions;\n\n  constructor(options: SecureServerOptions) {\n    super();\n    this.options = options;\n  }\n\n  _isSecure(): boolean {\n    return true;\n  }\n\n  _getSettings(): SecureServerOptions {\n    return this.options;\n  }\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAkBA,MAAAA,aAAA,GAAAC,OAAA;AAOA,MAAsBC,iBAAiB;EAIrC,OAAOC,cAAcA,CAAA;IACnB,OAAO,IAAIC,yBAAyB,EAAE;EACxC;EAEA,OAAOC,SAASA,CACdC,SAAwB,EACxBC,YAA2B,EACG;IAAA,IAA9BC,sBAAsB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IAE9B,IAAIH,SAAS,KAAK,IAAI,IAAI,CAACM,MAAM,CAACC,QAAQ,CAACP,SAAS,CAAC,EAAE;MACrD,MAAM,IAAIQ,SAAS,CAAC,oCAAoC,CAAC;;IAG3D,IAAI,CAACC,KAAK,CAACC,OAAO,CAACT,YAAY,CAAC,EAAE;MAChC,MAAM,IAAIO,SAAS,CAAC,+BAA+B,CAAC;;IAGtD,IAAI,OAAON,sBAAsB,KAAK,SAAS,EAAE;MAC/C,MAAM,IAAIM,SAAS,CAAC,0CAA0C,CAAC;;IAGjE,MAAMG,IAAI,GAAG,EAAE;IACf,MAAMC,GAAG,GAAG,EAAE;IAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,YAAY,CAACG,MAAM,EAAES,CAAC,EAAE,EAAE;MAC5C,MAAMC,IAAI,GAAGb,YAAY,CAACY,CAAC,CAAC;MAE5B,IAAIC,IAAI,KAAK,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;QAC7C,MAAM,IAAIN,SAAS,CAAC,eAAeK,CAAC,qBAAqB,CAAC;;MAG5D,IAAI,CAACP,MAAM,CAACC,QAAQ,CAACO,IAAI,CAACC,WAAW,CAAC,EAAE;QACtC,MAAM,IAAIP,SAAS,CAAC,eAAeK,CAAC,gCAAgC,CAAC;;MAGvE,IAAI,CAACP,MAAM,CAACC,QAAQ,CAACO,IAAI,CAACE,UAAU,CAAC,EAAE;QACrC,MAAM,IAAIR,SAAS,CAAC,eAAeK,CAAC,+BAA+B,CAAC;;MAGtEF,IAAI,CAACM,IAAI,CAACH,IAAI,CAACE,UAAU,CAAC;MAC1BJ,GAAG,CAACK,IAAI,CAACH,IAAI,CAACC,WAAW,CAAC;;IAG5B,OAAO,IAAIG,uBAAuB,CAAC;MACjCC,EAAE,EAAEnB,SAAS,IAAI,IAAAN,aAAA,CAAA0B,mBAAmB,GAAE,IAAIf,SAAS;MACnDM,IAAI;MACJC,GAAG;MACHS,WAAW,EAAEnB,sBAAsB;MACnCoB,OAAO,EAAE5B,aAAA,CAAA6B;KACV,CAAC;EACJ;;AAtDFC,OAAA,CAAA5B,iBAAA,GAAAA,iBAAA;AAyDA,MAAME,yBAA0B,SAAQF,iBAAiB;EACvD6B,SAASA,CAAA;IACP,OAAO,KAAK;EACd;EAEAC,YAAYA,CAAA;IACV,OAAO,IAAI;EACb;;AAGF,MAAMR,uBAAwB,SAAQtB,iBAAiB;EAGrD+B,YAAYC,OAA4B;IACtC,KAAK,EAAE;IACP,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EAEAH,SAASA,CAAA;IACP,OAAO,IAAI;EACb;EAEAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACE,OAAO;EACrB"},"metadata":{},"sourceType":"script","externalDependencies":[]}